题目：
输入一个整形数组，数组里有正数也有负数。
数组中连续的一个或多个整数组成一个子数组，每个子数组都有一个和。
求所有子数组的和的最大值。要求时间复杂度为O(n)。
例如输入的数组为1, -2, 3, 10, -4, 7, 2, -5，和最大的子数组为3, 10, -4, 7, 2，
因此输出为该子数组的和18。
leetcode 053

Answer:

public class Solution() {

    // method 1
    public int maxSubArray(int[] nums) {
        int maxSoFar = nums[0], maxEndingHere = nums[0];
        for (int i = 1; i < nums.length; i++) {
            maxEndingHere = Math.max(nums[i] + maxEndingHere, nums[i]);
            maxSoFar = Math.max(maxSoFar, maxEndingHere);
        }
        return maxSoFar
    }

    // method 2
    public int maxSubArray(int[] nums) {
        if (nums == null || nums.length <= 0)
            return 0;
        int curSum = 0, greatestSum = Integer.MIN_VALUE;
        for (int i = 0; i < nums.length; i++) {
            if (curSum <= 0)
                curSum = nums[i];
            else 
                curSum += nums[i];
            
            if (curSum > greatestSum)
                greatestSum = curSum;
        }
        return greatestSum;
    }
}